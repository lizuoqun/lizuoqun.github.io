import{_ as a,c as t,o as e,aS as o}from"./chunks/framework.nU6VANjp.js";const p=JSON.parse('{"title":"Tomcat","description":"","frontmatter":{},"headers":[],"relativePath":"backEnd/java/tomcat.md","filePath":"backEnd/java/tomcat.md","lastUpdated":1749030379000}'),c={name:"backEnd/java/tomcat.md"},r=o('<h1 id="tomcat" tabindex="-1">Tomcat <a class="header-anchor" href="#tomcat" aria-label="Permalink to &quot;Tomcat&quot;">​</a></h1><h2 id="tomcat-为什么要自定义类加载器" tabindex="-1">Tomcat 为什么要自定义类加载器 <a class="header-anchor" href="#tomcat-为什么要自定义类加载器" aria-label="Permalink to &quot;Tomcat 为什么要自定义类加载器&quot;">​</a></h2><p>在tomcat当中，当部署了多个应用时，如果应用之间存在类的依赖关系，那么就会出现类加载冲突的问题。本质上就是用来破坏<a href="/My-Project/topic/java/base.html#%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%E7%9A%84%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B"> 双亲委派</a>。</p>',3),n=[r];function s(_,m,d,i,l,h){return e(),t("div",null,n)}const B=a(c,[["render",s]]);export{p as __pageData,B as default};
