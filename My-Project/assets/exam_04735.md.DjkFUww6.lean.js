import{_ as h,c as t,m as i,a as s,J as l,w as n,aS as e,E as p,o as k}from"./chunks/framework.nU6VANjp.js";const ps=JSON.parse('{"title":"04735 数据库系统原理 ☑️","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"exam/04735.md","filePath":"exam/04735.md","lastUpdated":1749635707000}'),r={name:"exam/04735.md"},d=e("",3),E=i("li",null,[s("数据库管理系统（DBMS），是专门用于建立和管理数据库的一套软件，介于应用程序和操作系统之间 "),i("ul",null,[i("li",null,"数据定义——提供数据定义语言（DDL），定义表、视图、存储过程、触发器等"),i("li",null,"数据操纵——提供数据操纵语言（DML）操纵数据库中的基本数据，包括查询、插入、删除和修改等"),i("li",null,"数据库的运行管理——保证数据库的安全性、完整性、多用户对数据的并发使用以及发生故障后的系统恢复"),i("li",null,"数据库的建立和维护——创建数据库、对数据库的空间维护、数据库的备份与恢复、数据库的重组织和性能监听、分析等"),i("li",null,"数据组织、存储和管理——例如：索引查找、顺序查找等"),i("li",null,"其他功能——主要包括与其他软件的网络通信功能、不同数据库管理系统之间的数据传输以及相互访问功能等")])],-1),o=e("",3),c=i("ul",null,[i("li",null,"DBMS提供子模式描述语言（Subschema DDL）来严格定义子模式")],-1),u=e("",6),g=e("",6),y=i("li",null,"层次模型",-1),b=i("li",null,"网状模型",-1),F=i("li",null,"面向对象模型",-1),m=e("",11),A={id:"关系数据语言的分类",tabindex:"-1"},_=i("a",{class:"header-anchor",href:"#关系数据语言的分类","aria-label":'Permalink to "**<font style="color:rgb(0,0,0);">关系数据语言的分类 </font>**"'},"​",-1),D=i("p",null,"关系操作分为代数方式和逻辑方式",-1),C=e("",5),f={id:"函数依赖与关键字",tabindex:"-1"},q=i("a",{class:"header-anchor",href:"#函数依赖与关键字","aria-label":'Permalink to "**<font style="color:rgb(0,0,0);">函数依赖与关键字</font>**"'},"​",-1),x=i("ul",null,[i("li",null,"设R为任一给定关系，如果对于R中属性X的每一个值，R中的属性Y都只有唯一值与之对应，则称X函数决定Y或称Y函数依赖于X，记作X→Y。其中X称为决定因素"),i("li",null,"完全函数依赖：设R为任一给定关系，X、Y为其属性集，若X →Y，且对X中的任何真子集X’都有X’ ↛Y，则称Y完全函数依赖于X"),i("li",null,"部分函数依赖：设R为任一给定关系，X、Y为其属性集，若X →Y，且X中存在一个真子集X’满足X’ → Y，则称Y部分函数依赖于X"),i("li",null,"传递函数依赖：设R为任一给定关系，X、Y、Z为其属性子集，若X →Y，Y ↛X，Y→Z，则有X →Z。称Z传递函数依赖于X"),i("li",null,"设R为任一给定关系，U为其所含的全部属性集合，X为U的子集，若有完全函数依赖X →U，则X为R的一个候选关键字")],-1),P={id:"范式与关系范式化",tabindex:"-1"},T=i("a",{class:"header-anchor",href:"#范式与关系范式化","aria-label":'Permalink to "**<font style="color:rgb(0,0,0);">范式与关系范式化</font>**"'},"​",-1),v=e("",4),B={id:"数据库设计的目标",tabindex:"-1"},S=i("a",{class:"header-anchor",href:"#数据库设计的目标","aria-label":'Permalink to "<font style="color:rgb(0,0,0);">数据库设计的目标</font>"'},"​",-1),R=e("",63),I=i("li",null,"每个表只能定义一个主键",-1),N=i("li",null,"主键的值不能为NULL，必须能够唯一代表一行",-1),L=i("li",null,"复合主键不能包含不必要的多余列",-1),w=e("",4),M=i("li",null,"非空：not null",-1),V=e("",5),X=e("",26),O=i("li",null,[s("0级封锁 "),i("ul",null,[i("li",null,"封锁的事务不重写其他非0级封锁事务的未提交的更新数据。这种状态实际上实用价值不大。")])],-1),U=i("p",null,[i("strong",null,"活锁 & 死锁")],-1),Y=i("ul",null,[i("li",null,"排队，如“先到先服务”")],-1),Q=i("ul",null,[i("li",null,"一次性锁请求"),i("li",null,"锁请求排序"),i("li",null,"序列化处理"),i("li",null,"资源剥夺")],-1),G=e("",33),H={id:"过程",tabindex:"-1"},K=i("a",{class:"header-anchor",href:"#过程","aria-label":'Permalink to "<font style="color:rgb(0,0,0);">过程</font>"'},"​",-1),z=e("",7),W=e("",3),Z=i("p",null,"关系模型的三类完整性约束",-1),$=i("ul",null,[i("li",null,"实体完整性约束、参照完整性约束、用户定义完整性约束")],-1),j=i("h2",{id:"_2022-10-月错题",tabindex:"-1"},[s("2022.10 月错题 "),i("a",{class:"header-anchor",href:"#_2022-10-月错题","aria-label":'Permalink to "2022.10 月错题"'},"​")],-1),J=i("h2",{id:"_2022-04-月错题",tabindex:"-1"},[s("2022.04 月错题 "),i("a",{class:"header-anchor",href:"#_2022-04-月错题","aria-label":'Permalink to "2022.04 月错题"'},"​")],-1);function ss(is,as,ls,ns,es,hs){const a=p("font");return k(),t("div",null,[d,i("ul",null,[i("li",null,[s("数据（Data）是描述"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("事物的符号记录")]),_:1}),s("，是指用物理符号记录下来的、可以鉴别的信息")]),i("li",null,[s("数据库（DB）是长期存储在计算机中的有组织的、可共享的数据集合，数据库中存储的数据具有"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s(" 永久存储、有组织和可共享")]),_:1}),s("三个基本特点")]),E]),o,i("ul",null,[i("li",null,[s("模式：（"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("概念模式或逻辑模式")]),_:1}),s("），它是数据库中全体数据的逻辑结构或特征的描述，是所有用户的公共数据视图。一个数据库只有一个模式，且相对稳定")]),i("li",null,[s("外模式：（"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("子模式或用户模式")]),_:1}),s(" ），它是数据库用户（包括应用程序员和最终用户）能够看见和使用的局部数据的逻辑结构和特征的描述，是与某一应用有关的数据的逻辑表示 "),c]),i("li",null,[s("内模式：（"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("存储模式")]),_:1}),s("）是对数据库中数据"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s(" 物理结构和存储方式")]),_:1}),s("的描述，是数据在数据库内部的表示形式")])]),u,i("ul",null,[i("li",null,[s("数据结构：描述系统的"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("静态特性")]),_:1}),s("，即数据对象的数据类型、内容、属性及数据对象之间的联系")]),i("li",null,[s("数据操作：描述系统的"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("动态特性")]),_:1}),s("，是对各种对象实例允许执行的操作集合，包括操作及有关的操作规则")]),i("li",null,[s("数据约束：描述数据结构中数据间的"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("语法和语义关联")]),_:1}),s(" ，包括相互制约与依存关系及数据动态变化规则，以保证数据的正确性、有效性和相容性")])]),g,i("ul",null,[y,b,i("li",null,[l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("关系模型")]),_:1})]),F]),m,i("h4",A,[i("strong",null,[l(a,{style:{color:"rgb(0,0,0)"}},{default:n(()=>[s("关系数据语言的分类 ")]),_:1})]),s(),_]),D,i("ul",null,[i("li",null,[s("代数方式主要是"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("关系代数")]),_:1}),s("，通过对关系的操作来表达查询要求的方式")]),i("li",null,[s("逻辑方式主要是"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("关系演算")]),_:1}),s("，使用谓词来表达查询要求的方式")])]),C,i("h4",f,[i("strong",null,[l(a,{style:{color:"rgb(0,0,0)"}},{default:n(()=>[s("函数依赖与关键字")]),_:1})]),s(),q]),x,i("h4",P,[i("strong",null,[l(a,{style:{color:"rgb(0,0,0)"}},{default:n(()=>[s("范式与关系范式化")]),_:1})]),s(),T]),v,i("h4",B,[l(a,{style:{color:"rgb(0,0,0)"}},{default:n(()=>[s("数据库设计的目标")]),_:1}),s(),S]),R,i("ul",null,[i("li",null,[s("主键约束 "),i("ul",null,[I,N,L,i("li",null,[s("一个列名在复合主键的列表中只能出现一次，使用"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s(" promary key")]),_:1}),s(" 标识")])])]),i("li",null,[s("侯选键约束 "),i("ul",null,[i("li",null,[s("使用关键字 "),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("unique")]),_:1}),s(" 定义")])])])]),w,i("ul",null,[M,i("li",null,[s("check 约束："),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("check(c_age>=18) ")]),_:1}),s("表示该列的值大于等于 18")])]),V,i("p",null,[s("触发器是用户定义在"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("关系表")]),_:1}),s("上的一类由事件驱动的数据库对象，也是一种保证数据完整性的方法")]),X,i("ul",null,[O,i("li",null,[s("1级封锁 "),i("ul",null,[i("li",null,[s("被封锁的事务不允许重写未提交的更新数据。这防止了"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("丢失更新")]),_:1}),s("的发生")])])]),i("li",null,[s("2级封锁 "),i("ul",null,[i("li",null,[s("被封锁的事务既不重写也不读未提交的更新数据。这除了1级封锁的效果外还防止了"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s(" 读脏数据")]),_:1})])])]),i("li",null,[s("3级封锁 "),i("ul",null,[i("li",null,[s("被封锁的事务不读未提交的更新数据，不写任何（包括读操作的）未提交数据。这里除了包含2级封锁外，还不写未提交的读数据， 因而防止了"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("不可重复读")]),_:1}),s("的问题")])])])]),U,i("ul",null,[i("li",null,[s("活锁：因"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("优先级别低")]),_:1}),s("而永远等待下去 "),Y]),i("li",null,[s("死锁：两个以上事务"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("循环等待")]),_:1}),s("被同组中另一事务锁住的数据单元的情形 "),Q])]),G,i("h4",H,[l(a,{style:{color:"rgb(0,0,0)"}},{default:n(()=>[s("过程")]),_:1}),s(),K]),z,i("p",null,[s("新奥尔良设计方法是"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("规范化设计法")]),_:1})]),i("p",null,[s("数据仓库中数据是按照"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("各种主题")]),_:1}),s("组织的")]),i("p",null,[s("数据挖掘包括："),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("梳理统计、模式识别、机器学习、模糊数学")]),_:1}),s("（没有数据处理）")]),i("p",null,[s("数据共享是指在数据库中，一个数据可以为多个不同的"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("用户")]),_:1}),s("使用")]),i("p",null,[s("关系模型的数据结构非常简单，只包含单一的数据结构，即："),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("关系")]),_:1})]),i("p",null,[s("在关系数据库做，对关系的最基本的一个限定是：关系的每一个分量必须是一个不可分的"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("数据项")]),_:1})]),i("p",null,[s("为了数据库设计更合理，需要一个有效的指导原则，该原则称为"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("数据库设计方法")]),_:1})]),i("p",null,[s("MySQL 数据库管理系统构建各种信息管理系统或互联网网站的应用环境，主要有 "),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s(" LAMP ")]),_:1}),s("、"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("WAMP")]),_:1}),s(" 两种架构方式")]),i("p",null,[s("事务回滚："),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("rollback")]),_:1})]),i("p",null,[s("具有模型简单清晰、理论基础好、数据独立性强、数据库语言非过程化和标准化等特点是第"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("二")]),_:1}),s(" 代关系数据库系统")]),W,i("p",null,[s("关系规范化理论主要应用于数据库设计的"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("概念设计阶段")]),_:1})]),i("p",null,[s("数据库应用功能需求包括（数据存取、数据修改、数据删除）不包括"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("数据约束")]),_:1})]),i("p",null,[s("不属于数据模型优化方法："),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("建立合适的索引")]),_:1})]),i("p",null,[s("MySQL 中循环控制语句的关键字 LOOP、WHILE、REPEAT，没有 "),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("FOR")]),_:1})]),i("p",null,[s("关系模型的三个组成要素分别是"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("关系数据结构")]),_:1}),s("、关系操作集合和关系完整性约束")]),i("p",null,[s("在关系数据库中，"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("关系模式")]),_:1}),s("是静态的、稳定的")]),i("p",null,[s("从用户对数据的需求出发，数据库设计包括数据库"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("结构设计")]),_:1}),s(" 和数据库"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("行为设计 --2022.04 出现")]),_:1})]),i("p",null,[s("数据库生命周期分为数据库"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("分析与设计")]),_:1}),s("阶段和数据库"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s(" 实现和操作")]),_:1}),s("阶段")]),i("p",null,[s("反映数据库中数据正确性和相容性的是数据库的"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("完整性")]),_:1})]),Z,$,j,i("p",null,[s("一个八元关系也可以被称为"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s(" 8 度")]),_:1}),s("关系")]),i("p",null,[s("数据的"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("集成")]),_:1}),s("是数据库管理系统的主要目的")]),i("p",null,[s("是图标是由基本表或其他视图导出来的表是"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("虚表")]),_:1}),s("，不对应实际存储的数据")]),i("p",null,[s("在 MySQL 中，一个关系对应一个基本表，一个或多个基本表对应一个"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("存储文件")]),_:1})]),i("p",null,[s("完整性约束条件的作用对象可以是"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("列、元组和表")]),_:1})]),i("p",null,[s("分割是将数据分散到各自的物理单元中，以便能分别处理，以提高"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("数据处理")]),_:1}),s("的效率")]),J,i("p",null,[s("通常所说的数据库系统不包括（"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("网络环境")]),_:1}),s("），包括【数据库、数据库管理系统、相关使用工具】")]),i("p",null,[s("关系中包含在任何一个候选码中的属性被称为"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("主属性")]),_:1})]),i("p",null,[s("不属于基本操作的是【"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("除")]),_:1}),s("】包括的有【选择、连接、并】")]),i("p",null,[s("ER 图向关系模型转换时，关系规范化理论主要应用于数据库的"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("概念设计阶段")]),_:1})]),i("p",null,[s("良好的数据库性能不包括【"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("数据库结构合理")]),_:1}),s("】包括的有【高效存取。节省空间。良好的数据共享性、完整性、一致性及完全保密性】")]),i("p",null,[s("逻辑结构设计的任务不包括【"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("画数据流图")]),_:1}),s("】包括【ER 图转关系模型、对关系数据模型优化、设计面向用户的外模式】")]),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("不可以")]),_:1}),s("使用 select 语句打开游标"),i("p",null,[s("在数据挖掘过程中，数据预处理之后，首先需要完成的步骤是【"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("建模")]),_:1}),s("】")]),i("p",null,[s("在关系数据库中，"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("关系")]),_:1}),s("是动态的，是随时间改变的")]),i("p",null,[s("在 MySQL 存储过程体中，常用的判断语句有"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s(" IF...THEN...ELSE")]),_:1}),s(" 和 "),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("CASE")]),_:1}),s(" 语句")]),i("p",null,[s("触发器时一种保证数据"),l(a,{style:{color:"#DF2A3F"}},{default:n(()=>[s("完整性")]),_:1}),s("的方法")])])}const ks=h(r,[["render",ss]]);export{ps as __pageData,ks as default};
