import{_ as e,c as p,o as l,aP as t}from"./chunks/framework.DkXG5xPu.js";const c=JSON.parse('{"title":"02324 离散数学","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"exam/02324.md","filePath":"exam/02324.md","lastUpdated":1749800803000}'),i={name:"exam/02324.md"};function r(o,a,q,_,n,s){return l(),p("div",null,a[0]||(a[0]=[t('<h1 id="_02324-离散数学" tabindex="-1">02324 离散数学 <a class="header-anchor" href="#_02324-离散数学" aria-label="Permalink to &quot;02324 离散数学&quot;">​</a></h1><h2 id="等价演算" tabindex="-1">等价演算 <a class="header-anchor" href="#等价演算" aria-label="Permalink to &quot;等价演算&quot;">​</a></h2><ul><li>双重否定 p = ¬(¬p)</li><li>交换 p v q = q v p</li><li>结合 (p ∧ q) ∧ r = p ∧ (q ∧ r)</li><li>德摩根 ¬(p ∧ q) = ¬p ∨ ¬q 或 ¬(p ∨ q) = ¬p ∧ ¬q</li><li>分配 p ∨ (q ∧ r) = (p ∨ q) ∧ (p ∨ r) 或 p ∧ (q ∨ r) = (p ∧ q) ∨ (p ∧ r)</li><li>吸收 p ∨ (p ∧ q) = p 或 p ∧ (p ∨ q) = p</li><li>条件等价 p → q = ¬p ∨ q</li><li>双条件等价 p ↔ q = (p → q) ∧ (q → p)</li><li>假言 p → q = ¬q → ¬p</li></ul>',3)]))}const m=e(i,[["render",r]]);export{c as __pageData,m as default};
