import{_ as e,C as h,c as k,o as r,aP as p,j as a,G as n,a as i,w as t}from"./chunks/framework.DkXG5xPu.js";const q=JSON.parse('{"title":"04735 数据库系统原理 ☑️","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"exam/04735.md","filePath":"exam/04735.md","lastUpdated":1749800803000}'),d={name:"exam/04735.md"},E={id:"关系数据语言的分类",tabindex:"-1"},u={id:"函数依赖与关键字",tabindex:"-1"},o={id:"范式与关系范式化",tabindex:"-1"},g={id:"数据库设计的目标",tabindex:"-1"},y={id:"过程",tabindex:"-1"};function b(F,s,m,A,D,C){const l=h("font");return r(),k("div",null,[s[190]||(s[190]=p('<h1 id="_04735-数据库系统原理-☑️" tabindex="-1">04735 数据库系统原理 ☑️ <a class="header-anchor" href="#_04735-数据库系统原理-☑️" aria-label="Permalink to &quot;04735 数据库系统原理 ☑️&quot;">​</a></h1><h2 id="一、数据库系统概述" tabindex="-1">一、数据库系统概述 <a class="header-anchor" href="#一、数据库系统概述" aria-label="Permalink to &quot;一、数据库系统概述&quot;">​</a></h2><h3 id="数据库基本概念" tabindex="-1">数据库基本概念 <a class="header-anchor" href="#数据库基本概念" aria-label="Permalink to &quot;数据库基本概念&quot;">​</a></h3>',3)),a("ul",null,[a("li",null,[s[1]||(s[1]=i("数据（Data）是描述")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[0]||(s[0]=[i("事物的符号记录")])),_:1,__:[0]}),s[2]||(s[2]=i("，是指用物理符号记录下来的、可以鉴别的信息"))]),a("li",null,[s[4]||(s[4]=i("数据库（DB）是长期存储在计算机中的有组织的、可共享的数据集合，数据库中存储的数据具有")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[3]||(s[3]=[i(" 永久存储、有组织和可共享")])),_:1,__:[3]}),s[5]||(s[5]=i("三个基本特点"))]),s[6]||(s[6]=a("li",null,[i("数据库管理系统（DBMS），是专门用于建立和管理数据库的一套软件，介于应用程序和操作系统之间 "),a("ul",null,[a("li",null,"数据定义——提供数据定义语言（DDL），定义表、视图、存储过程、触发器等"),a("li",null,"数据操纵——提供数据操纵语言（DML）操纵数据库中的基本数据，包括查询、插入、删除和修改等"),a("li",null,"数据库的运行管理——保证数据库的安全性、完整性、多用户对数据的并发使用以及发生故障后的系统恢复"),a("li",null,"数据库的建立和维护——创建数据库、对数据库的空间维护、数据库的备份与恢复、数据库的重组织和性能监听、分析等"),a("li",null,"数据组织、存储和管理——例如：索引查找、顺序查找等"),a("li",null,"其他功能——主要包括与其他软件的网络通信功能、不同数据库管理系统之间的数据传输以及相互访问功能等")])],-1))]),s[191]||(s[191]=p('<h3 id="数据管理技术" tabindex="-1">数据管理技术 <a class="header-anchor" href="#数据管理技术" aria-label="Permalink to &quot;数据管理技术&quot;">​</a></h3><ul><li>人工管理阶段</li><li>文件系统阶段</li><li>数据库管理阶段 <ul><li>数据集成</li><li>数据共享度高</li><li>数据冗余度小</li><li>数据一致性</li><li>数据独立性高</li><li>实施统一管理与控制</li><li>减少应用程序开发与维护的工作量</li></ul></li></ul><h3 id="数据库系统的结构" tabindex="-1">数据库系统的结构 <a class="header-anchor" href="#数据库系统的结构" aria-label="Permalink to &quot;数据库系统的结构&quot;">​</a></h3>',3)),a("ul",null,[a("li",null,[s[8]||(s[8]=i("模式：（")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[7]||(s[7]=[i("概念模式或逻辑模式")])),_:1,__:[7]}),s[9]||(s[9]=i("），它是数据库中全体数据的逻辑结构或特征的描述，是所有用户的公共数据视图。一个数据库只有一个模式，且相对稳定"))]),a("li",null,[s[11]||(s[11]=i("外模式：（")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[10]||(s[10]=[i("子模式或用户模式")])),_:1,__:[10]}),s[12]||(s[12]=i(" ），它是数据库用户（包括应用程序员和最终用户）能够看见和使用的局部数据的逻辑结构和特征的描述，是与某一应用有关的数据的逻辑表示 ")),s[13]||(s[13]=a("ul",null,[a("li",null,"DBMS提供子模式描述语言（Subschema DDL）来严格定义子模式")],-1))]),a("li",null,[s[16]||(s[16]=i("内模式：（")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[14]||(s[14]=[i("存储模式")])),_:1,__:[14]}),s[17]||(s[17]=i("）是对数据库中数据")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[15]||(s[15]=[i(" 物理结构和存储方式")])),_:1,__:[15]}),s[18]||(s[18]=i("的描述，是数据在数据库内部的表示形式"))])]),s[192]||(s[192]=p('<p>三级模式结构的两层映像与数据独立性</p><ul><li>外模式/模式映像（逻辑独立性）</li><li>模式/内模式映像（物理独立性）</li></ul><p>数据库系统的运行与应用结构</p><ul><li>C/S 结构（Client/Server 桌面客户端）</li><li>B/S 结构（Browser/Server 网页端）</li></ul><h3 id="数据模型" tabindex="-1">数据模型 <a class="header-anchor" href="#数据模型" aria-label="Permalink to &quot;数据模型&quot;">​</a></h3><h4 id="组成要素" tabindex="-1">组成要素 <a class="header-anchor" href="#组成要素" aria-label="Permalink to &quot;组成要素&quot;">​</a></h4>',6)),a("ul",null,[a("li",null,[s[20]||(s[20]=i("数据结构：描述系统的")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[19]||(s[19]=[i("静态特性")])),_:1,__:[19]}),s[21]||(s[21]=i("，即数据对象的数据类型、内容、属性及数据对象之间的联系"))]),a("li",null,[s[23]||(s[23]=i("数据操作：描述系统的")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[22]||(s[22]=[i("动态特性")])),_:1,__:[22]}),s[24]||(s[24]=i("，是对各种对象实例允许执行的操作集合，包括操作及有关的操作规则"))]),a("li",null,[s[26]||(s[26]=i("数据约束：描述数据结构中数据间的")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[25]||(s[25]=[i("语法和语义关联")])),_:1,__:[25]}),s[27]||(s[27]=i(" ，包括相互制约与依存关系及数据动态变化规则，以保证数据的正确性、有效性和相容性"))])]),s[193]||(s[193]=p('<h4 id="概念层数据模型" tabindex="-1">概念层数据模型 <a class="header-anchor" href="#概念层数据模型" aria-label="Permalink to &quot;概念层数据模型&quot;">​</a></h4><ul><li>实体：客观存在并可相互区别的事物称为实体。如学生、部门、课程等</li><li>属性：实体所具有的特征。如学生具有学号、姓名、性别等特性</li><li>码或键：可唯一标识实体的属性集。如学号是学生实体的码或键</li><li>域：属性的取值范围。如性别的域为（男，女）</li><li>实体型：用实体名与属性名的集合标识同类实体，称为实体型。如：学生（学号、姓名、性别、出生日期）</li><li>实体集：同型实体的集合称为实体集。如：每个学生是一个实体，所有的学生构成一个实体集</li><li>联系：实体（型）内部之间的联系和实体（型）之间的联系 <ul><li>一对一 1:1</li><li>一对多：1：N</li><li>多对多：M：N</li></ul></li></ul><h4 id="概念模型" tabindex="-1">概念模型 <a class="header-anchor" href="#概念模型" aria-label="Permalink to &quot;概念模型&quot;">​</a></h4><p>用来描述现实世界的事物，与具体的计算机系统无关最典型的概念模型是实体联系（E-R）</p><image src="/My-Project/images/04735/er.png" data-fancybox="gallery"></image><h4 id="逻辑层数据模型" tabindex="-1">逻辑层数据模型 <a class="header-anchor" href="#逻辑层数据模型" aria-label="Permalink to &quot;逻辑层数据模型&quot;">​</a></h4>',6)),a("ul",null,[s[29]||(s[29]=a("li",null,"层次模型",-1)),s[30]||(s[30]=a("li",null,"网状模型",-1)),a("li",null,[n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[28]||(s[28]=[i("关系模型")])),_:1,__:[28]})]),s[31]||(s[31]=a("li",null,"面向对象模型",-1))]),s[194]||(s[194]=p('<h4 id="物理层数据模型" tabindex="-1">物理层数据模型 <a class="header-anchor" href="#物理层数据模型" aria-label="Permalink to &quot;物理层数据模型&quot;">​</a></h4><p>也称为数据的物理模型（Physical Model），描述数据在存储介质上的组织结构，是逻辑模型的物理实现，即每一种逻辑模型在实现时都要有与其相对应物理模型</p><h2 id="二、关系数据库" tabindex="-1">二、关系数据库 <a class="header-anchor" href="#二、关系数据库" aria-label="Permalink to &quot;二、关系数据库&quot;">​</a></h2><h3 id="关系数据模型" tabindex="-1">关系数据模型 <a class="header-anchor" href="#关系数据模型" aria-label="Permalink to &quot;关系数据模型&quot;">​</a></h3><h4 id="基本术语" tabindex="-1">基本术语 <a class="header-anchor" href="#基本术语" aria-label="Permalink to &quot;基本术语&quot;">​</a></h4><ul><li>表（Table） 也称关系，是一个二维的数据结构，由表名、列、行数据构成。 每个表的表名唯一，每一行描述一条具体的记录值</li><li>关系（Relation） 同表。关系有三种类型：基本关系、查询表和视图表</li><li>列（Column）表中的列，也称作字段（Field）或属性（Attribute），每一列有一个名称，称为列名、字段或属性名</li><li>行（Row） 也称元组（Tuple）或记录（Record），一行数据即一个元组或一条记录</li><li>分量（Component）元组中的一个属性值成为分量</li><li>码或键（Key）能用来唯一标识一行数据的属性或属性组，如学号、身份证号等</li><li>超码或超键（Super Key） 如果一个关系中的一个码移去某个属性，它仍然是这个关系的码，则这样的码或键为该关系的超码或超键。 如（学号，姓名）、（学号，姓名，性别， 出生日期）等</li><li>候选码或候选键（Candidate Key） 如果在关系的一个码或键中，不能移去任何一个属性，否则它就不是这个关系的码或键。如（学号，课程号）</li><li>主码或主键（Primary Key） 指定一个候选码来唯一标识一行数据</li><li>全码或全键（All-Key）一个关系中所有属性都是主码或主键</li><li>主属性（Primary Attribute）和非主属性（NonPrimary Attribute）包含任何一个候选码的属性称为主属性，不包含任何一个候选码的属性称为非主属性</li><li>外码或外键（Foreign Key）某个属性不是这个关系的主码或候选码，而是另一个关系的主码，则该属性是外码。如：学生（学号，姓名，性别，出生日期，班主任，教师工号） 教师（工号，姓名，性别，出生日期）</li><li>参照关系和被按照关系：以外码作为主码的关系成为被参照关系，外码所在的关系称为参照关系</li><li>域（Domain）表示属性的取值范围，如“性别”取（男，女）</li><li>数据类型：表示属性的数据类型，如“性别”为字符型，“工资”为货币型</li><li>关系模式：关系模式是静态的，关系是动态的。关系是关系模式在某一时刻的状态或内容</li><li>关系数据库：关系数据库是以关系模型作为数据的逻辑模型，并采用关系作为数据组织的一类数据库，其数据操作建立在关系代数的基础上</li></ul><p>不是任意一个二维表都是关系，关系有下列要求：</p><ul><li>每个属性都是不可分解的</li><li>每一个关系模式中属性的数据类型以及属性的个数是相对固定的</li><li>每一个关系模式中的属性必须命名，且不同</li><li>同一个关系中不允许出现候选码相同的两行</li><li>行可任意交换</li><li>列可任意交换</li></ul><h3 id="关系操作集合" tabindex="-1">关系操作集合 <a class="header-anchor" href="#关系操作集合" aria-label="Permalink to &quot;关系操作集合&quot;">​</a></h3><h4 id="基本的关系操作" tabindex="-1">基本的关系操作 <a class="header-anchor" href="#基本的关系操作" aria-label="Permalink to &quot;基本的关系操作&quot;">​</a></h4><ul><li>查询类：选择、投影、连接、除、并、差、交、笛卡尔积等</li><li>更新类：修改、新增、删除</li></ul>',11)),a("h4",E,[a("strong",null,[n(l,{style:{color:"rgb(0,0,0)"}},{default:t(()=>s[32]||(s[32]=[i("关系数据语言的分类 ")])),_:1,__:[32]})]),s[33]||(s[33]=i()),s[34]||(s[34]=a("a",{class:"header-anchor",href:"#关系数据语言的分类","aria-label":'Permalink to "**<font style="color:rgb(0,0,0);">关系数据语言的分类 </font>**"'},"​",-1))]),s[195]||(s[195]=a("p",null,"关系操作分为代数方式和逻辑方式",-1)),a("ul",null,[a("li",null,[s[36]||(s[36]=i("代数方式主要是")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[35]||(s[35]=[i("关系代数")])),_:1,__:[35]}),s[37]||(s[37]=i("，通过对关系的操作来表达查询要求的方式"))]),a("li",null,[s[39]||(s[39]=i("逻辑方式主要是")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[38]||(s[38]=[i("关系演算")])),_:1,__:[38]}),s[40]||(s[40]=i("，使用谓词来表达查询要求的方式"))])]),s[196]||(s[196]=p('<h3 id="关系的完整性约束" tabindex="-1">关系的完整性约束 <a class="header-anchor" href="#关系的完整性约束" aria-label="Permalink to &quot;关系的完整性约束&quot;">​</a></h3><ul><li>实体完整性约束 <ul><li>主键（主码）不能为空</li></ul></li><li>参照完整性约束 <ul><li>实体之间存在联系</li></ul></li><li>用户自定义完整性约束 <ul><li>反映某一具体应用所涉及的数据应满足的要求</li></ul></li><li>关系模型完整性约束的检验 <ul><li>执行插入操作</li><li>执行删除操作</li><li>执行更新操作</li></ul></li></ul><h3 id="关系数据库的规范化理论" tabindex="-1">关系数据库的规范化理论 <a class="header-anchor" href="#关系数据库的规范化理论" aria-label="Permalink to &quot;关系数据库的规范化理论&quot;">​</a></h3><h4 id="可能存在的冗余和异常问题" tabindex="-1">可能存在的冗余和异常问题 <a class="header-anchor" href="#可能存在的冗余和异常问题" aria-label="Permalink to &quot;可能存在的冗余和异常问题&quot;">​</a></h4><ul><li>数据冗余</li><li>更新异常</li><li>插入异常</li><li>删除异常</li></ul>',5)),a("h4",u,[a("strong",null,[n(l,{style:{color:"rgb(0,0,0)"}},{default:t(()=>s[41]||(s[41]=[i("函数依赖与关键字")])),_:1,__:[41]})]),s[42]||(s[42]=i()),s[43]||(s[43]=a("a",{class:"header-anchor",href:"#函数依赖与关键字","aria-label":'Permalink to "**<font style="color:rgb(0,0,0);">函数依赖与关键字</font>**"'},"​",-1))]),s[197]||(s[197]=a("ul",null,[a("li",null,"设R为任一给定关系，如果对于R中属性X的每一个值，R中的属性Y都只有唯一值与之对应，则称X函数决定Y或称Y函数依赖于X，记作X→Y。其中X称为决定因素"),a("li",null,"完全函数依赖：设R为任一给定关系，X、Y为其属性集，若X →Y，且对X中的任何真子集X’都有X’ ↛Y，则称Y完全函数依赖于X"),a("li",null,"部分函数依赖：设R为任一给定关系，X、Y为其属性集，若X →Y，且X中存在一个真子集X’满足X’ → Y，则称Y部分函数依赖于X"),a("li",null,"传递函数依赖：设R为任一给定关系，X、Y、Z为其属性子集，若X →Y，Y ↛X，Y→Z，则有X →Z。称Z传递函数依赖于X"),a("li",null,"设R为任一给定关系，U为其所含的全部属性集合，X为U的子集，若有完全函数依赖X →U，则X为R的一个候选关键字")],-1)),a("h4",o,[a("strong",null,[n(l,{style:{color:"rgb(0,0,0)"}},{default:t(()=>s[44]||(s[44]=[i("范式与关系范式化")])),_:1,__:[44]})]),s[45]||(s[45]=i()),s[46]||(s[46]=a("a",{class:"header-anchor",href:"#范式与关系范式化","aria-label":'Permalink to "**<font style="color:rgb(0,0,0);">范式与关系范式化</font>**"'},"​",-1))]),s[198]||(s[198]=p('<h2 id="三、数据库设计" tabindex="-1">三、数据库设计 <a class="header-anchor" href="#三、数据库设计" aria-label="Permalink to &quot;三、数据库设计&quot;">​</a></h2><h3 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h3><h4 id="数据库的生命周期" tabindex="-1">数据库的生命周期 <a class="header-anchor" href="#数据库的生命周期" aria-label="Permalink to &quot;数据库的生命周期&quot;">​</a></h4><ul><li>数据库分析与设计阶段：需求分析、概念设计、逻辑设计和物理设计</li><li>数据库实现与操作阶段：数据库的实现、操作与监督、修改与调整</li></ul>',4)),a("h4",g,[n(l,{style:{color:"rgb(0,0,0)"}},{default:t(()=>s[47]||(s[47]=[i("数据库设计的目标")])),_:1,__:[47]}),s[48]||(s[48]=i()),s[49]||(s[49]=a("a",{class:"header-anchor",href:"#数据库设计的目标","aria-label":'Permalink to "<font style="color:rgb(0,0,0);">数据库设计的目标</font>"'},"​",-1))]),s[199]||(s[199]=p(`<ul><li>满足应用功能需求</li><li>良好的数据库性能</li></ul><h4 id="数据库设计的方法" tabindex="-1">数据库设计的方法 <a class="header-anchor" href="#数据库设计的方法" aria-label="Permalink to &quot;数据库设计的方法&quot;">​</a></h4><ul><li>直观设计法</li><li>规范设计法 <ul><li>新奥尔良设计方法</li><li>基于E-R图模型的数据库设计方法</li><li>基于第三范式的设计方法</li></ul></li><li>计算机辅助设计法</li></ul><h4 id="设计过程" tabindex="-1">设计过程 <a class="header-anchor" href="#设计过程" aria-label="Permalink to &quot;设计过程&quot;">​</a></h4><image src="/My-Project/images/04735/design_process.png" data-fancybox="gallery"></image><h3 id="数据库设计的基本步骤" tabindex="-1">数据库设计的基本步骤 <a class="header-anchor" href="#数据库设计的基本步骤" aria-label="Permalink to &quot;数据库设计的基本步骤&quot;">​</a></h3><ul><li>需求分析 <ul><li>明确数据库的范围（涉及哪些表）</li><li>应用过程分析：了解并分析数据与数据处理间的关系</li><li>收集和分析数据 <ul><li>静态结构：数据的静态结构是指不施加应用操作于其上时数据的原始状况</li><li>动态结构：动态结构是指将应用操作施加于数据之上后数据的状况</li><li>数据约束：数据约束是指使用数据时的特殊要求 <ul><li>数据的安全保密性</li><li>数据的完整性</li><li>响应时间</li><li>数据恢复</li></ul></li></ul></li><li>编写需求分析报告 <ul><li>数据库的应用功能目标</li><li>标明不同用户视图范围</li><li>应用处理过程需求说明：数据流程图、任务分类表、数据操作特征表、操作过程说明书</li><li>数据字典：数据字典通常包括数据分类表、数据元素表和各类原始资料</li><li>数据量：静态数据量、动态数据量</li><li>数据约束</li></ul></li></ul></li><li>概念结构设计 <ul><li>在需求分析中产生的需求分析报告的基础上，按照特定的方法设计满足应用需求的用户信息结构，该信息结构通常称为概念模型。其中，采用E-R图作为概念模型的描述工具</li></ul></li><li>逻辑结构设计：概念设计 -&gt; 模型转换 -&gt; 子模式设计/应用程序设计说明 -&gt; 设计评价 -&gt; 物理设计</li><li>物理设计：对于一个给定的数据库逻辑结构，研究并构造物理结构的过程，其具体的任务主要是确定在存储设备上的存储结构及其存取方法，因DBMS的不同还可能包括建立索引和聚集，以及物理块大小、缓冲区个数和大小、数据压缩的选择等</li><li>数据库实施：加载数据、应用程序设计、数据库试运行</li><li>数据库的运行和维护</li></ul><h3 id="关系数据库设计方法" tabindex="-1">关系数据库设计方法 <a class="header-anchor" href="#关系数据库设计方法" aria-label="Permalink to &quot;关系数据库设计方法&quot;">​</a></h3><h4 id="设计过程-各级模式" tabindex="-1">设计过程&amp;各级模式 <a class="header-anchor" href="#设计过程-各级模式" aria-label="Permalink to &quot;设计过程&amp;各级模式&quot;">​</a></h4><ul><li>所有的需求都容纳在概念模式当中</li><li>通过逻辑模式转换成一张张的表（外模式）以及存储数据的（内模式）</li></ul><h4 id="e-r-图" tabindex="-1">E-R 图 <a class="header-anchor" href="#e-r-图" aria-label="Permalink to &quot;E-R 图&quot;">​</a></h4><p>关系有一对一、一对多、多对多</p><p>E-R图之间的冲突主要表现在三个方面</p><ul><li>属性冲突：属性域冲突、属性取值单位冲突</li><li>命名冲突：同名异义、异名同义</li><li>结构冲突 <ul><li>同一对象在一个局部E-R图中作为实体，而在另一个局部E-R图中作为属性</li><li>同一实体在不同E-R图中属性个数和类型不同</li><li>实体之间的联系在不同E华业（英华业）教育 -R图中是不同的类型</li></ul></li></ul><h2 id="四、sql-数据库操作" tabindex="-1">四、SQL&amp;数据库操作 <a class="header-anchor" href="#四、sql-数据库操作" aria-label="Permalink to &quot;四、SQL&amp;数据库操作&quot;">​</a></h2><h3 id="sql-概述" tabindex="-1">SQL 概述 <a class="header-anchor" href="#sql-概述" aria-label="Permalink to &quot;SQL 概述&quot;">​</a></h3><h4 id="特点" tabindex="-1">特点 <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点&quot;">​</a></h4><ul><li>SQL不是特定数据库供应商专有的语言</li><li>SQL简单易学</li><li>SQL尽管看上去很简单，但它实际上是一种强有力的语言，灵活使用其语言元素，可以进行非常复杂和高级的数据库操作</li></ul><h4 id="组成" tabindex="-1">组成 <a class="header-anchor" href="#组成" aria-label="Permalink to &quot;组成&quot;">​</a></h4><ul><li>数据定义语言 DDL：create、alter、drop</li><li>数据操作语言 DML：select、update、insert、delete</li><li>数据控制语言 DCL：grant、revoke</li><li>嵌入式和动态 SQL</li><li>SQL 调用和会话规则</li></ul><h4 id="内置函数" tabindex="-1">内置函数 <a class="header-anchor" href="#内置函数" aria-label="Permalink to &quot;内置函数&quot;">​</a></h4><ul><li>数值：abs 绝对值、sqrt 开平方</li><li>聚合：count</li><li>字符串：ascll、char</li><li>日期：now、year</li><li>加密：encode、encrypt</li><li>流程控制： if、ifnull</li><li>格式化：format</li><li>类型转换：cast</li><li>系统信息：user、version</li></ul><h3 id="数据定义-sql-语法" tabindex="-1">数据定义&amp;SQL 语法 <a class="header-anchor" href="#数据定义-sql-语法" aria-label="Permalink to &quot;数据定义&amp;SQL 语法&quot;">​</a></h3><h4 id="数据库操作语句" tabindex="-1">数据库操作语句 <a class="header-anchor" href="#数据库操作语句" aria-label="Permalink to &quot;数据库操作语句&quot;">​</a></h4><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> database</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> exisits db_name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> db_name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> db_name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">drop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> database</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> db_name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">show db_name</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="数据表操作语句" tabindex="-1">数据表操作语句 <a class="header-anchor" href="#数据表操作语句" aria-label="Permalink to &quot;数据表操作语句&quot;">​</a></h4><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> table_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`id\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)ENGINE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">InnoDB</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN sex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NULL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MODIFY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN sex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FLOAT</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name CHANGE COLUMN sex new_sex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> employees </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN new_sex</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rename </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> new_table_name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">drop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tale_name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 查看所有的表和特定表的结构</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">show tables</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">show column </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">describe table_name;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="索引" tabindex="-1">索引 <a class="header-anchor" href="#索引" aria-label="Permalink to &quot;索引&quot;">​</a></h4><ul><li>索引是提高数据文件访问效率的有效方法</li><li>索引是以文件形式存储的</li><li>索引在提高查询速度的同时，却会降低更新表的速度</li></ul><p>索引在逻辑上的分类</p><ul><li>普通索引（INDEX）</li><li>唯一性索引（UNIQUE）</li><li>主键（PRIMARY KEY）</li></ul><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> idx_sex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> USER(sex) ## 给user表的sex添加索引</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> idx_name_sex</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sex) ## 组合索引</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SHOW </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INDEX</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> USER</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INDEX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> idx_sex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> USER</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="新增、修改、删除" tabindex="-1">新增、修改、删除 <a class="header-anchor" href="#新增、修改、删除" aria-label="Permalink to &quot;新增、修改、删除&quot;">​</a></h4><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxxx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;1&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;1&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;1&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">delete</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xxx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="查询" tabindex="-1">查询 <a class="header-anchor" href="#查询" aria-label="Permalink to &quot;查询&quot;">​</a></h4><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 查询从上往下的优先级</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> A</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> table_name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;1&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">group by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">having</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> # 相当于group by的where条件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">order by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">desc/asc</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">between</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">between</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">not</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> between</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2000</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 判断空值</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">is not null</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="视图" tabindex="-1">视图 <a class="header-anchor" href="#视图" aria-label="Permalink to &quot;视图&quot;">​</a></h4><p>视图与基本表的区别</p><ul><li>基本表是数据库中真实存在的表，而视图是建立在对数据库中真实表查询基础上的虚拟表</li><li>视图的内容是由存储在数据库中进行查询操作的SQL语句定义的，它的列数据与行数据均来自于定义视图的查询所引用的基本表</li><li>视图不适宜数据集的形式存储在数据库中的，它所对应的数据实际上是存储在视图所引用的基本表中的</li><li>视图是用来查看存储在别处的数据的一种虚拟表，本身不存储数据</li></ul><p>优点</p><ul><li>集中分散数据 、 简化查询语句、重用SQL语句、保护数据安全、共享所需数据、更改数据格式</li></ul><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> view_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">drop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> view</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> view_name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">show </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> view view_name</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="五、数据库编程" tabindex="-1">五、数据库编程 <a class="header-anchor" href="#五、数据库编程" aria-label="Permalink to &quot;五、数据库编程&quot;">​</a></h2><h3 id="存储过程" tabindex="-1">存储过程 <a class="header-anchor" href="#存储过程" aria-label="Permalink to &quot;存储过程&quot;">​</a></h3><h4 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h4><p>存储过程是一组为了完成某项特定功能的SQL语句集，实质上是一段存储在数据中的代码。</p><p>存储过程的优点：</p><ul><li>可增强SQL语言的功能和灵活性</li><li>良好的封装性</li><li>高性能</li><li>可减少网络流量</li><li>存储过程可作为一种安全机制来确保数据库的安全性和数据的完整性</li></ul><h4 id="创建存储过程及调用" tabindex="-1">创建存储过程及调用 <a class="header-anchor" href="#创建存储过程及调用" aria-label="Permalink to &quot;创建存储过程及调用&quot;">​</a></h4><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 存储过程名为 AddUser，它接受三个参数，这些参数将被用来插入到 user 表中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AddUser(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    IN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    IN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p_sex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    IN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p_address </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> USER (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sex, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (p_name, p_sex, p_address);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">END</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> //</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DELIMITER ;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CALL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AddUser(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;你最好是&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;湖南省长沙市岳麓区&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">drop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PROCEDURE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AddUser</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="游标" tabindex="-1">游标 <a class="header-anchor" href="#游标" aria-label="Permalink to &quot;游标&quot;">​</a></h4><p>游标是一个被SELECT语句检索出来的结果集。存储了游标后，用户或程序可以需要滚动或浏览其中的数据</p><h3 id="存储函数" tabindex="-1">存储函数 <a class="header-anchor" href="#存储函数" aria-label="Permalink to &quot;存储函数&quot;">​</a></h3><h4 id="存储函数-存储过程的区别" tabindex="-1">存储函数&amp;存储过程的区别 <a class="header-anchor" href="#存储函数-存储过程的区别" aria-label="Permalink to &quot;存储函数&amp;存储过程的区别&quot;">​</a></h4><ul><li>存储过程不能拥有输出参数，而存储过程可以拥有输出参数（函数只能返回值或者表对象）</li><li>使用CALL语句调用存储过程，使用函数名调用函数</li><li>存储函数必须包含RETURN语句，而存储过程不能包含</li></ul><h4 id="创建存储函数及调用" tabindex="-1">创建存储函数及调用 <a class="header-anchor" href="#创建存储函数及调用" aria-label="Permalink to &quot;创建存储函数及调用&quot;">​</a></h4><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DELIMITER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FUNCTION</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GetUserById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RETURNS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pid);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">END//</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DELIMITER ;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GetUserById(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">drop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GetUserById</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="六、数据库安全" tabindex="-1">六、数据库安全 <a class="header-anchor" href="#六、数据库安全" aria-label="Permalink to &quot;六、数据库安全&quot;">​</a></h2><h3 id="数据库完整性" tabindex="-1">数据库完整性 <a class="header-anchor" href="#数据库完整性" aria-label="Permalink to &quot;数据库完整性&quot;">​</a></h3><h4 id="完整性约束条件的作用对象" tabindex="-1">完整性约束条件的作用对象 <a class="header-anchor" href="#完整性约束条件的作用对象" aria-label="Permalink to &quot;完整性约束条件的作用对象&quot;">​</a></h4><ul><li>列级约束 <ul><li>对数据类型的约束</li><li>对数据格式的约束</li><li>对取值范围和取值集合的约束</li><li>对空值的约束</li></ul></li><li>元组约束 <ul><li>指各字段之间的约束</li></ul></li><li>表级约束 <ul><li>指若干元组之间、关系之间的联系约束</li></ul></li></ul><h4 id="定义与实现完整性约束" tabindex="-1">定义与实现完整性约束 <a class="header-anchor" href="#定义与实现完整性约束" aria-label="Permalink to &quot;定义与实现完整性约束&quot;">​</a></h4><p>实体完整性约束</p>`,63)),a("ul",null,[a("li",null,[s[56]||(s[56]=i("主键约束 ")),a("ul",null,[s[53]||(s[53]=a("li",null,"每个表只能定义一个主键",-1)),s[54]||(s[54]=a("li",null,"主键的值不能为NULL，必须能够唯一代表一行",-1)),s[55]||(s[55]=a("li",null,"复合主键不能包含不必要的多余列",-1)),a("li",null,[s[51]||(s[51]=i("一个列名在复合主键的列表中只能出现一次，使用")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[50]||(s[50]=[i(" promary key")])),_:1,__:[50]}),s[52]||(s[52]=i(" 标识"))])])]),a("li",null,[s[60]||(s[60]=i("侯选键约束 ")),a("ul",null,[a("li",null,[s[58]||(s[58]=i("使用关键字 ")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[57]||(s[57]=[i("unique")])),_:1,__:[57]}),s[59]||(s[59]=i(" 定义"))])])])]),s[200]||(s[200]=p(`<p>参照完整性</p><ul><li>外键约束</li></ul><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> score</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cscore </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">st_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">references</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student(id),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cs_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">references</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> classes(id),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">primary key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(st_id,cs_id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">或者</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> score</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cscore </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">st_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cs_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">primary key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(st_id,cs_id),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FOREIGN KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (st_id) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">REFERENCES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> student(id),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FOREIGN KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cs_id) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">REFERENCES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> classes(id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>用户自定义完整性</p>`,4)),a("ul",null,[s[64]||(s[64]=a("li",null,"非空：not null",-1)),a("li",null,[s[62]||(s[62]=i("check 约束：")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[61]||(s[61]=[i("check(c_age>=18) ")])),_:1,__:[61]}),s[63]||(s[63]=i("表示该列的值大于等于 18"))])]),s[201]||(s[201]=p(`<h4 id="命名完整性约束" tabindex="-1">命名完整性约束 <a class="header-anchor" href="#命名完整性约束" aria-label="Permalink to &quot;命名完整性约束&quot;">​</a></h4><p>CONSTRAINT 别名 约束</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> emp6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	pwd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	CONSTRAINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> emp7_pk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NAME</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,pwd)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 通过 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 添加约束</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">alter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user_detailed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">add</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> constraint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agecheck </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">check</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">between</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> and</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 150</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="触发器" tabindex="-1">触发器 <a class="header-anchor" href="#触发器" aria-label="Permalink to &quot;触发器&quot;">​</a></h3><h4 id="概述-1" tabindex="-1">概述 <a class="header-anchor" href="#概述-1" aria-label="Permalink to &quot;概述&quot;">​</a></h4>`,5)),a("p",null,[s[66]||(s[66]=i("触发器是用户定义在")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[65]||(s[65]=[i("关系表")])),_:1,__:[65]}),s[67]||(s[67]=i("上的一类由事件驱动的数据库对象，也是一种保证数据完整性的方法"))]),s[202]||(s[202]=p(`<blockquote><p>如：每当客户订购一个产品时，都从产品库存量中减去可订购的数量</p><p>如：每当删除客户基本信息表中一个客户的全部信息时，该客户的未完成订单信息也应被自动删除</p><p>自动触发、自动更新、删除、新增等</p></blockquote><p><strong>主要作用</strong>：实现主键和外键不能保证的复杂的参照完整性和数据一致性，从而保护表中的数据</p><h4 id="创建触发器" tabindex="-1">创建触发器 <a class="header-anchor" href="#创建触发器" aria-label="Permalink to &quot;创建触发器&quot;">​</a></h4><p>下面添加一个触发器表示，在 user 表当中添加一个新增触发器，当往 user 表里面插入了一行数据之后会触发触发器，执行 insert 语句往 info 表插入一条数据</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：执行后、还可选before</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表插入（还可选update、</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">delete</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 对应的表名，表示触发器在加哪个表里面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> each </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 行级触发</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">begin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表示触发后执行的语句</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">delimiter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> trigger</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tirgger_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">after</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> each </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">row</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">begin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> info (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`height\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`weight\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">175</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">62</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> //</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">delimiter</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 修改、删除触发器是一样的，insert改成update、delete即可</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">drop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> trigger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trigger_name</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 所有触发器的信息都存在 information_schema 数据库的 triggers 表中</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> information_schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">triggers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trigger_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;触发器名&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="完全性和访问控制" tabindex="-1">完全性和访问控制 <a class="header-anchor" href="#完全性和访问控制" aria-label="Permalink to &quot;完全性和访问控制&quot;">​</a></h3><blockquote><p>在 MySQL 的版本当中需要注意：5.7 版本可以使用 password 这个内置函数，在 8.0 版本要使用 MD5 或者 SHA2(&#39; your_password&#39;,256)</p></blockquote><h4 id="用户账号管理" tabindex="-1">用户账号管理 <a class="header-anchor" href="#用户账号管理" aria-label="Permalink to &quot;用户账号管理&quot;">​</a></h4><p>分别是创建用户、修改密码、修改名称、删除用户</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zhangsan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> identified </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">by</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;1234&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> passwrod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;zhangsan&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;123456&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rename user </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;zhangsan&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lisi&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">drop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lisi&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="账号权限管理" tabindex="-1">账号权限管理 <a class="header-anchor" href="#账号权限管理" aria-label="Permalink to &quot;账号权限管理&quot;">​</a></h4><p>授权可以选择的包括：select、insert、delete、update、create、alter、index、drop、deferences、all</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">grant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 权限类型 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 数据库名</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">表名</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;用户名&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;主机名&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [WITH GRANT OPTION];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 给张三这个用户授予所有权限</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">grant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> all privileges </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;zhangsan&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 只给他操作这个库表的新增查询权限</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">grant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ON</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mydb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mytable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;zhangsan&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 允许他将这个可以的权限授给其他用户</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">grant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> all privileges </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">on</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;zhangsan&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> with</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> grant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> option</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 撤销权限、刷新</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">revoke</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> on</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mydb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mytable</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;zhangsan&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flush privileges</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="事务-并发控制" tabindex="-1">事务&amp;并发控制 <a class="header-anchor" href="#事务-并发控制" aria-label="Permalink to &quot;事务&amp;并发控制&quot;">​</a></h3><h4 id="事务" tabindex="-1">事务 <a class="header-anchor" href="#事务" aria-label="Permalink to &quot;事务&quot;">​</a></h4><p>是用户定义的一个数据操作序列，这些操作可作为一个完整的工作单元，要么全部执行，要么全不执行，是一个不可分割的工作单位</p><p>特征：ACID</p><ul><li>原子性（Atomicity）事务的是不可分割的工作单位</li><li>一致性（Consistency） 事务必须满足数据库的完整性约束，且事务执行完毕后将数据由一个一致性状态变到另一个一致性状态</li><li>隔离性（Isolation）一个事务的执行不能被其他事务干扰</li><li>持续性（Permanence）一个事务一旦提交，它对数据库中数据的改变就应该是永久性的</li></ul><h4 id="并发操作的问题" tabindex="-1">并发操作的问题 <a class="header-anchor" href="#并发操作的问题" aria-label="Permalink to &quot;并发操作的问题&quot;">​</a></h4><ul><li>丢失更新 <ul><li>两个事务 T1,T2 同时修改，T2 的提交破坏了 T1 提交的结果，T1 的修改被丢失</li></ul></li><li>不可重复读 <ul><li>T1 读取数据后，T2 提交修改，T1 再次读取数据已经被改变了</li></ul></li><li>读脏数据 <ul><li>T1 修改数据后写入磁盘，T2 来读该数据，此时 T1 发现数据写入错误于是撤销，T2 读到的数据还是改了之后的错误数据</li></ul></li></ul><h4 id="锁" tabindex="-1">锁 <a class="header-anchor" href="#锁" aria-label="Permalink to &quot;锁&quot;">​</a></h4><p>一个锁实质上就是允许或阻止一个事务对一个数据对象的存取特权分为</p><ul><li>共享锁：也就是读锁，一个事务给某行数据加了读锁，其他事务也可以读，但是不能写（S 锁）</li><li>排它锁：也就是写锁，一个事务给某行数据加了写锁，其他事务不能读，也不能写（X 锁）</li></ul><p><strong>用锁控制并发的原理</strong></p><ul><li>事务 T 对数据 D 加了 X 锁，此时其他的事务都不能对 数据 D 做任何操作，必须等待 T 释放 X 锁</li><li>事务 T 对数据 D 加了 S 锁，其他事务可以请求 S 锁，但不能请求 X 锁，需要等待释放 S 锁才能请求 X 锁</li><li>事务执行数据库操作时都要先请求相应的锁，即对读请求S锁，对更新（插入、删除、修改）请求X锁</li><li>事务一直占有获得的锁直到结束时释放</li></ul><p><strong>封锁的级别</strong></p>`,26)),a("ul",null,[s[79]||(s[79]=a("li",null,[i("0级封锁 "),a("ul",null,[a("li",null,"封锁的事务不重写其他非0级封锁事务的未提交的更新数据。这种状态实际上实用价值不大。")])],-1)),a("li",null,[s[71]||(s[71]=i("1级封锁 ")),a("ul",null,[a("li",null,[s[69]||(s[69]=i("被封锁的事务不允许重写未提交的更新数据。这防止了")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[68]||(s[68]=[i("丢失更新")])),_:1,__:[68]}),s[70]||(s[70]=i("的发生"))])])]),a("li",null,[s[74]||(s[74]=i("2级封锁 ")),a("ul",null,[a("li",null,[s[73]||(s[73]=i("被封锁的事务既不重写也不读未提交的更新数据。这除了1级封锁的效果外还防止了")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[72]||(s[72]=[i(" 读脏数据")])),_:1,__:[72]})])])]),a("li",null,[s[78]||(s[78]=i("3级封锁 ")),a("ul",null,[a("li",null,[s[76]||(s[76]=i("被封锁的事务不读未提交的更新数据，不写任何（包括读操作的）未提交数据。这里除了包含2级封锁外，还不写未提交的读数据， 因而防止了")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[75]||(s[75]=[i("不可重复读")])),_:1,__:[75]}),s[77]||(s[77]=i("的问题"))])])])]),s[203]||(s[203]=a("p",null,[a("strong",null,"活锁 & 死锁")],-1)),a("ul",null,[a("li",null,[s[81]||(s[81]=i("活锁：因")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[80]||(s[80]=[i("优先级别低")])),_:1,__:[80]}),s[82]||(s[82]=i("而永远等待下去 ")),s[83]||(s[83]=a("ul",null,[a("li",null,"排队，如“先到先服务”")],-1))]),a("li",null,[s[85]||(s[85]=i("死锁：两个以上事务")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[84]||(s[84]=[i("循环等待")])),_:1,__:[84]}),s[86]||(s[86]=i("被同组中另一事务锁住的数据单元的情形 ")),s[87]||(s[87]=a("ul",null,[a("li",null,"一次性锁请求"),a("li",null,"锁请求排序"),a("li",null,"序列化处理"),a("li",null,"资源剥夺")],-1))])]),s[204]||(s[204]=p(`<p><strong>两阶段锁法</strong></p><ul><li>发展（Growing）或加锁阶段 <ul><li>在此期间，对任一数据对象进行任何操作之前，事务都要获得对该对象的一个相应的锁</li></ul></li><li>收缩（Shinking）或释放锁阶段 <ul><li>一旦事务释放了一个锁，则标明它已进入了此阶段，此后它就不能再请求任何其他锁</li></ul></li></ul><h3 id="备份-恢复" tabindex="-1">备份&amp;恢复 <a class="header-anchor" href="#备份-恢复" aria-label="Permalink to &quot;备份&amp;恢复&quot;">​</a></h3><p>数据库中的数据丢失或被破坏的原因有：</p><p>计算机硬件故障、软件故障、病毒、人为误操作、自然灾害、盗窃</p><h4 id="sql-操作" tabindex="-1">SQL 操作 <a class="header-anchor" href="#sql-操作" aria-label="Permalink to &quot;SQL 操作&quot;">​</a></h4><p>通过 outfile 导出的文件需要看secure_file_priv 配置的导出文件地址，只能导出到这个地址。</p><p>补充：如果这个变量的值为 null，表示禁止导出，在 MySQL 安装路径下的 my.ini 文件中添加<code>secure_file_priv=设置路径</code>语句，然后重启 MySQL 服务</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">show VARIABLES </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">like</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;secure_file_priv&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">导出到d盘user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">txt文件当中</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">，</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 字段用逗号隔开，字符串值放在双引号中间、用？作为一行结束</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">into</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> outfile </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;D://user.txt&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fileds terminated </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;,&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">optionally enclosed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&quot;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lines terminated </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">load</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> infile </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;D://user.txt&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">into</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fileds terminated </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;,&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">optionally enclosed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&quot;&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lines terminated </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="七、数据库应用设计-开发实例" tabindex="-1">七、数据库应用设计&amp;开发实例 <a class="header-anchor" href="#七、数据库应用设计-开发实例" aria-label="Permalink to &quot;七、数据库应用设计&amp;开发实例&quot;">​</a></h2><h3 id="简述题" tabindex="-1">简述题 <a class="header-anchor" href="#简述题" aria-label="Permalink to &quot;简述题&quot;">​</a></h3><p>简述数据库应用软件设计与实现的基本步骤</p><ul><li>以数据库的声明周期为演化主线，可分为需求分析、系统功能与数据库设计、系统功能与数据库实现、测试与维护阶段</li></ul><p>简述数据库应用软件开发过程中系统功能设计与数据库设计的区别和联系</p><ul><li>系统功能设计是以系统需求分析产生的需求报告为基础的，数据库设计是以功能设计和前期的需求分析为基础的，局部采用ER图最后合并成全局ER图，并将其转换成关系模式，以关系规范化理论进行优化和处理</li></ul><h2 id="八、数据库管理技术的发展" tabindex="-1">八、数据库管理技术的发展 <a class="header-anchor" href="#八、数据库管理技术的发展" aria-label="Permalink to &quot;八、数据库管理技术的发展&quot;">​</a></h2><h3 id="数据库发展" tabindex="-1">数据库发展 <a class="header-anchor" href="#数据库发展" aria-label="Permalink to &quot;数据库发展&quot;">​</a></h3><p>第一代</p><ul><li>代表 <ul><li>BM公司的IMS，1969，层次模型</li><li>CODASYL的DBTG，1970，网状模型</li></ul></li><li>特点 <ul><li>支持三级模式、用存取路径表示数据之间的联系、独立的数据定义语言、导航的数据操作语言</li></ul></li></ul><p>第二代</p><ul><li>关系数据库系统：IBM公司的E.F.Codd，1970</li><li>主要成果 <ul><li>奠定了关系模型的理论基础、研究了关系数据语言、研制了大量的RDBMS的原型</li></ul></li></ul><p>第三代</p><ul><li>OODB 没有被市场普遍接受</li><li>特征 <ul><li>应支持数据管理、对象管理和知识管理、必须保持或继承第二代数据库系统的技术、必须对其他系统开放</li></ul></li></ul><h3 id="数据仓库" tabindex="-1">数据仓库 <a class="header-anchor" href="#数据仓库" aria-label="Permalink to &quot;数据仓库&quot;">​</a></h3><h4 id="主要特征" tabindex="-1">主要特征 <a class="header-anchor" href="#主要特征" aria-label="Permalink to &quot;主要特征&quot;">​</a></h4><ul><li>面向主题、集成性、数据的非易失性、数据的时变性</li></ul><h4 id="三个重要概念" tabindex="-1">三个重要概念 <a class="header-anchor" href="#三个重要概念" aria-label="Permalink to &quot;三个重要概念&quot;">​</a></h4><ul><li>粒度：粒度问题是设计数据仓库的一个重要方面。粒度是数据仓库的数据单位中保存数据的细化或综合程度的级别，细化程度越高，粒度级就越小</li><li>分割：分割是将数据分散到各自的物理单元中，以便能分别处理，以提高数据处理的效率。数据分割后的单元成为切片</li><li>维：维是人们观察数据的特定角度，是考虑问题时的一类属性</li></ul><h3 id="数据挖掘" tabindex="-1">数据挖掘 <a class="header-anchor" href="#数据挖掘" aria-label="Permalink to &quot;数据挖掘&quot;">​</a></h3><p>是从大量的、不完全的、有噪声的、模糊的、随机的实际应用数据中发现并提取隐藏在其中的、人们事先不知</p><p>道的、但是又潜在有用的信息和知识的一种技术</p><h4 id="具备的几种功能" tabindex="-1">具备的几种功能 <a class="header-anchor" href="#具备的几种功能" aria-label="Permalink to &quot;具备的几种功能&quot;">​</a></h4><ul><li>概念描述</li><li>关联分析。Apriori、FP-Grows</li><li>分类与预测。决策树模型、神经网络模型、线性回归等</li><li>聚类。K-Means、GMM</li><li>孤立点检测</li><li>趋势和演变分析</li></ul>`,33)),a("h4",y,[n(l,{style:{color:"rgb(0,0,0)"}},{default:t(()=>s[88]||(s[88]=[i("过程")])),_:1,__:[88]}),s[89]||(s[89]=i()),s[90]||(s[90]=a("a",{class:"header-anchor",href:"#过程","aria-label":'Permalink to "<font style="color:rgb(0,0,0);">过程</font>"'},"​",-1))]),s[205]||(s[205]=p('<ul><li>确定业务对象</li><li>数据的选择</li><li>数据的预处理</li><li>建模</li><li>模型评估</li><li>模型部署</li></ul><h3 id="大数据管理技术" tabindex="-1">大数据管理技术 <a class="header-anchor" href="#大数据管理技术" aria-label="Permalink to &quot;大数据管理技术&quot;">​</a></h3><h4 id="特征-4v" tabindex="-1">特征（4V） <a class="header-anchor" href="#特征-4v" aria-label="Permalink to &quot;特征（4V）&quot;">​</a></h4><ul><li>数据量巨大。即大量化（Volume）</li><li>数据种类繁多，即多样化（Variety）</li><li>处理速度快，即快速化（Velocity）</li><li>价值（Value）密度低</li></ul><h2 id="关键字" tabindex="-1">关键字 <a class="header-anchor" href="#关键字" aria-label="Permalink to &quot;关键字&quot;">​</a></h2><table tabindex="0"><thead><tr><th>单词</th><th>说明</th></tr></thead><tbody><tr><td>procedure</td><td>用来创建存储过程</td></tr><tr><td>delimiter</td><td>区域</td></tr><tr><td>declare</td><td>声明变量</td></tr><tr><td>cursor</td><td>游标</td></tr><tr><td>primary key</td><td>主键</td></tr><tr><td>foreign key.....references...</td><td>外键</td></tr><tr><td>constraint</td><td>完整性约束（设置别名）</td></tr><tr><td>trigger</td><td>触发器</td></tr><tr><td>identified</td><td>身份验证</td></tr><tr><td>grant</td><td>授权</td></tr><tr><td>all privileges</td><td>所有权限</td></tr><tr><td>fileds terminated</td><td>备份恢复字段分割</td></tr><tr><td>optionally enclosed</td><td>备份恢复字段放在何处</td></tr><tr><td>lines terminated</td><td>行分割</td></tr></tbody></table><h2 id="_2023-10-月错题" tabindex="-1">2023.10 月错题 <a class="header-anchor" href="#_2023-10-月错题" aria-label="Permalink to &quot;2023.10 月错题&quot;">​</a></h2>',7)),a("p",null,[s[92]||(s[92]=i("新奥尔良设计方法是")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[91]||(s[91]=[i("规范化设计法")])),_:1,__:[91]})]),a("p",null,[s[94]||(s[94]=i("数据仓库中数据是按照")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[93]||(s[93]=[i("各种主题")])),_:1,__:[93]}),s[95]||(s[95]=i("组织的"))]),a("p",null,[s[97]||(s[97]=i("数据挖掘包括：")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[96]||(s[96]=[i("梳理统计、模式识别、机器学习、模糊数学")])),_:1,__:[96]}),s[98]||(s[98]=i("（没有数据处理）"))]),a("p",null,[s[100]||(s[100]=i("数据共享是指在数据库中，一个数据可以为多个不同的")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[99]||(s[99]=[i("用户")])),_:1,__:[99]}),s[101]||(s[101]=i("使用"))]),a("p",null,[s[103]||(s[103]=i("关系模型的数据结构非常简单，只包含单一的数据结构，即：")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[102]||(s[102]=[i("关系")])),_:1,__:[102]})]),a("p",null,[s[105]||(s[105]=i("在关系数据库做，对关系的最基本的一个限定是：关系的每一个分量必须是一个不可分的")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[104]||(s[104]=[i("数据项")])),_:1,__:[104]})]),a("p",null,[s[107]||(s[107]=i("为了数据库设计更合理，需要一个有效的指导原则，该原则称为")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[106]||(s[106]=[i("数据库设计方法")])),_:1,__:[106]})]),a("p",null,[s[110]||(s[110]=i("MySQL 数据库管理系统构建各种信息管理系统或互联网网站的应用环境，主要有 ")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[108]||(s[108]=[i(" LAMP ")])),_:1,__:[108]}),s[111]||(s[111]=i("、")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[109]||(s[109]=[i("WAMP")])),_:1,__:[109]}),s[112]||(s[112]=i(" 两种架构方式"))]),a("p",null,[s[114]||(s[114]=i("事务回滚：")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[113]||(s[113]=[i("rollback")])),_:1,__:[113]})]),a("p",null,[s[116]||(s[116]=i("具有模型简单清晰、理论基础好、数据独立性强、数据库语言非过程化和标准化等特点是第")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[115]||(s[115]=[i("二")])),_:1,__:[115]}),s[117]||(s[117]=i(" 代关系数据库系统"))]),s[206]||(s[206]=p(`<p>创建视图的 SQL 语句</p><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 视图名称</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> （</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 查询）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">create</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> view</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getAllUser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,age,sex) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,age,sex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 视图就是一个虚表，调用和关系表是一样的</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> getAllUser</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="_2023-04-月错题" tabindex="-1">2023.04 月错题 <a class="header-anchor" href="#_2023-04-月错题" aria-label="Permalink to &quot;2023.04 月错题&quot;">​</a></h2>`,3)),a("p",null,[s[119]||(s[119]=i("关系规范化理论主要应用于数据库设计的")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[118]||(s[118]=[i("概念设计阶段")])),_:1,__:[118]})]),a("p",null,[s[121]||(s[121]=i("数据库应用功能需求包括（数据存取、数据修改、数据删除）不包括")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[120]||(s[120]=[i("数据约束")])),_:1,__:[120]})]),a("p",null,[s[123]||(s[123]=i("不属于数据模型优化方法：")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[122]||(s[122]=[i("建立合适的索引")])),_:1,__:[122]})]),a("p",null,[s[125]||(s[125]=i("MySQL 中循环控制语句的关键字 LOOP、WHILE、REPEAT，没有 ")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[124]||(s[124]=[i("FOR")])),_:1,__:[124]})]),a("p",null,[s[127]||(s[127]=i("关系模型的三个组成要素分别是")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[126]||(s[126]=[i("关系数据结构")])),_:1,__:[126]}),s[128]||(s[128]=i("、关系操作集合和关系完整性约束"))]),a("p",null,[s[130]||(s[130]=i("在关系数据库中，")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[129]||(s[129]=[i("关系模式")])),_:1,__:[129]}),s[131]||(s[131]=i("是静态的、稳定的"))]),a("p",null,[s[134]||(s[134]=i("从用户对数据的需求出发，数据库设计包括数据库")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[132]||(s[132]=[i("结构设计")])),_:1,__:[132]}),s[135]||(s[135]=i(" 和数据库")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[133]||(s[133]=[i("行为设计 --2022.04 出现")])),_:1,__:[133]})]),a("p",null,[s[138]||(s[138]=i("数据库生命周期分为数据库")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[136]||(s[136]=[i("分析与设计")])),_:1,__:[136]}),s[139]||(s[139]=i("阶段和数据库")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[137]||(s[137]=[i(" 实现和操作")])),_:1,__:[137]}),s[140]||(s[140]=i("阶段"))]),a("p",null,[s[142]||(s[142]=i("反映数据库中数据正确性和相容性的是数据库的")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[141]||(s[141]=[i("完整性")])),_:1,__:[141]})]),s[207]||(s[207]=a("p",null,"关系模型的三类完整性约束",-1)),s[208]||(s[208]=a("ul",null,[a("li",null,"实体完整性约束、参照完整性约束、用户定义完整性约束")],-1)),s[209]||(s[209]=a("h2",{id:"_2022-10-月错题",tabindex:"-1"},[i("2022.10 月错题 "),a("a",{class:"header-anchor",href:"#_2022-10-月错题","aria-label":'Permalink to "2022.10 月错题"'},"​")],-1)),a("p",null,[s[144]||(s[144]=i("一个八元关系也可以被称为")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[143]||(s[143]=[i(" 8 度")])),_:1,__:[143]}),s[145]||(s[145]=i("关系"))]),a("p",null,[s[147]||(s[147]=i("数据的")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[146]||(s[146]=[i("集成")])),_:1,__:[146]}),s[148]||(s[148]=i("是数据库管理系统的主要目的"))]),a("p",null,[s[150]||(s[150]=i("是图标是由基本表或其他视图导出来的表是")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[149]||(s[149]=[i("虚表")])),_:1,__:[149]}),s[151]||(s[151]=i("，不对应实际存储的数据"))]),a("p",null,[s[153]||(s[153]=i("在 MySQL 中，一个关系对应一个基本表，一个或多个基本表对应一个")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[152]||(s[152]=[i("存储文件")])),_:1,__:[152]})]),a("p",null,[s[155]||(s[155]=i("完整性约束条件的作用对象可以是")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[154]||(s[154]=[i("列、元组和表")])),_:1,__:[154]})]),a("p",null,[s[157]||(s[157]=i("分割是将数据分散到各自的物理单元中，以便能分别处理，以提高")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[156]||(s[156]=[i("数据处理")])),_:1,__:[156]}),s[158]||(s[158]=i("的效率"))]),s[210]||(s[210]=a("h2",{id:"_2022-04-月错题",tabindex:"-1"},[i("2022.04 月错题 "),a("a",{class:"header-anchor",href:"#_2022-04-月错题","aria-label":'Permalink to "2022.04 月错题"'},"​")],-1)),a("p",null,[s[160]||(s[160]=i("通常所说的数据库系统不包括（")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[159]||(s[159]=[i("网络环境")])),_:1,__:[159]}),s[161]||(s[161]=i("），包括【数据库、数据库管理系统、相关使用工具】"))]),a("p",null,[s[163]||(s[163]=i("关系中包含在任何一个候选码中的属性被称为")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[162]||(s[162]=[i("主属性")])),_:1,__:[162]})]),a("p",null,[s[165]||(s[165]=i("不属于基本操作的是【")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[164]||(s[164]=[i("除")])),_:1,__:[164]}),s[166]||(s[166]=i("】包括的有【选择、连接、并】"))]),a("p",null,[s[168]||(s[168]=i("ER 图向关系模型转换时，关系规范化理论主要应用于数据库的")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[167]||(s[167]=[i("概念设计阶段")])),_:1,__:[167]})]),a("p",null,[s[170]||(s[170]=i("良好的数据库性能不包括【")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[169]||(s[169]=[i("数据库结构合理")])),_:1,__:[169]}),s[171]||(s[171]=i("】包括的有【高效存取。节省空间。良好的数据共享性、完整性、一致性及完全保密性】"))]),a("p",null,[s[173]||(s[173]=i("逻辑结构设计的任务不包括【")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[172]||(s[172]=[i("画数据流图")])),_:1,__:[172]}),s[174]||(s[174]=i("】包括【ER 图转关系模型、对关系数据模型优化、设计面向用户的外模式】"))]),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[175]||(s[175]=[i("不可以")])),_:1,__:[175]}),s[211]||(s[211]=i("使用 select 语句打开游标")),a("p",null,[s[177]||(s[177]=i("在数据挖掘过程中，数据预处理之后，首先需要完成的步骤是【")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[176]||(s[176]=[i("建模")])),_:1,__:[176]}),s[178]||(s[178]=i("】"))]),a("p",null,[s[180]||(s[180]=i("在关系数据库中，")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[179]||(s[179]=[i("关系")])),_:1,__:[179]}),s[181]||(s[181]=i("是动态的，是随时间改变的"))]),a("p",null,[s[184]||(s[184]=i("在 MySQL 存储过程体中，常用的判断语句有")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[182]||(s[182]=[i(" IF...THEN...ELSE")])),_:1,__:[182]}),s[185]||(s[185]=i(" 和 ")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[183]||(s[183]=[i("CASE")])),_:1,__:[183]}),s[186]||(s[186]=i(" 语句"))]),a("p",null,[s[188]||(s[188]=i("触发器时一种保证数据")),n(l,{style:{color:"#DF2A3F"}},{default:t(()=>s[187]||(s[187]=[i("完整性")])),_:1,__:[187]}),s[189]||(s[189]=i("的方法"))])])}const x=e(d,[["render",b]]);export{q as __pageData,x as default};
