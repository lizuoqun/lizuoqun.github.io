import{_ as e,c as r,o as t,aP as l}from"./chunks/framework.DkXG5xPu.js";const s=JSON.parse('{"title":"Zookeeper","description":"","frontmatter":{},"headers":[],"relativePath":"backEnd/java/zk.md","filePath":"backEnd/java/zk.md","lastUpdated":1749030379000}'),o={name:"backEnd/java/zk.md"};function i(d,a,h,c,n,p){return t(),r("div",null,a[0]||(a[0]=[l('<h1 id="zookeeper" tabindex="-1">Zookeeper <a class="header-anchor" href="#zookeeper" aria-label="Permalink to &quot;Zookeeper&quot;">​</a></h1><h2 id="数据模型-节点类型" tabindex="-1">数据模型 &amp; 节点类型 <a class="header-anchor" href="#数据模型-节点类型" aria-label="Permalink to &quot;数据模型 &amp; 节点类型&quot;">​</a></h2><p>树形结构：主要维护客户端的会话（session）状态及数据节点（dataNode）信息</p><p>zNode</p><ul><li>持久节点</li><li>临时节点 创建该节点的客户端会话因超时或发生异常而关闭时、该节点也相应的在水上被删除</li><li>有序节点 不是一种单独种类的节点、而是在持久节点和临时节点的基础上、增加了一个节点有序的性质</li></ul><h2 id="命名服务-配置管理-集群管理" tabindex="-1">命名服务 &amp; 配置管理 &amp; 集群管理 <a class="header-anchor" href="#命名服务-配置管理-集群管理" aria-label="Permalink to &quot;命名服务 &amp; 配置管理 &amp; 集群管理&quot;">​</a></h2><ul><li>命名服务 通过名字来获取资源 &amp; 服务地址</li><li>配置管理 修改配置，zNode节点发生变化，利用watcher通知客户端</li><li>集群管理 集群监控（集群控制） 通过zookeeper的监控功能，监控集群中各个节点的状态（用来控制机器的加入和剔除）</li></ul><h2 id="watch-机制" tabindex="-1">watch 机制 <a class="header-anchor" href="#watch-机制" aria-label="Permalink to &quot;watch 机制&quot;">​</a></h2><p>客户端，可以通过在zNode上设置watch，实现实时监听zNode的变化，Watch事件是一个一次性的触发器，(一次性、轻量)</p><ul><li>父节点的创建，修改，删除都会触发Watcher事件。</li><li>子节点的创建，删除会触发Watcher事件。</li></ul><h2 id="zk-eureka" tabindex="-1">Zk &amp; Eureka <a class="header-anchor" href="#zk-eureka" aria-label="Permalink to &quot;Zk &amp; Eureka&quot;">​</a></h2><ul><li>Zk 当节点剔除时，需要重新选举leader，此时Zk是不可用的</li><li>Eureka 节点挂掉不会影响Eureka的可用性（高可用）</li></ul>',12)]))}const u=e(o,[["render",i]]);export{s as __pageData,u as default};
