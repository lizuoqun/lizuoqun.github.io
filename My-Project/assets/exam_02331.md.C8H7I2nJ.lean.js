import{C as l,c as E,o as g,aP as n,G as i,j as s,a as e}from"./chunks/framework.BJOOWd-7.js";const F=JSON.parse('{"title":"02331 数据结构 ✒️","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"exam/02331.md","filePath":"exam/02331.md","lastUpdated":1757065608000}'),y={name:"exam/02331.md"},A=Object.assign(y,{setup(o){const t={nodes:[{id:"A"},{id:"B"},{id:"C"},{id:"D"}],edges:[{source:"A",target:"B",arrow:"forward"},{source:"A",target:"C",arrow:"forward"},{source:"C",target:"D",arrow:"forward"},{source:"D",target:"A",arrow:"forward"}],DijkstraNodes:[{id:"1"},{id:"2"},{id:"3"},{id:"4"},{id:"5"}],DijkstraEdges:[{source:"1",target:"2",arrow:"forward",weight:10},{source:"1",target:"4",arrow:"forward",weight:30},{source:"1",target:"5",arrow:"forward",weight:100},{source:"2",target:"3",arrow:"forward",weight:50},{source:"3",target:"5",arrow:"forward",weight:10},{source:"4",target:"3",arrow:"forward",weight:20},{source:"4",target:"5",arrow:"forward",weight:60}]};return(b,a)=>{const h=l("MarkMermaid"),p=l("el-image"),k=l("MarkGraph"),r=l("el-divider"),m=l("BackTop"),d=l("MarkTitle"),c=l("MarkLottie");return g(),E("div",null,[a[0]||(a[0]=n("",10)),i(h,{title:"不同的数据结构",code:`graph LR
A[线性表] --插入、删除
只能在表的一端进行--> B[栈]
A --插入、在表的一端进行
删除只能在表的另一端进行--> C[队列]
`}),a[1]||(a[1]=n("",137)),i(p,{class:"my-2",lazy:"",src:"/My-Project/images/02331/binaryTreeTraverse.webp","data-fancybox":"gallery",width:"100%"}),a[2]||(a[2]=n("",6)),i(p,{class:"my-2",lazy:"",src:"/My-Project/images/02331/reverseRenderingBinaryTree.webp","data-fancybox":"gallery",width:"100%"}),a[3]||(a[3]=n("",13)),i(p,{class:"my-2",lazy:"",src:"/My-Project/images/02331/treeToBinaryTree.webp","data-fancybox":"gallery",width:"100%"}),a[4]||(a[4]=s("h4",{id:"森林➡️二叉树",tabindex:"-1"},[e("森林➡️二叉树 "),s("a",{class:"header-anchor",href:"#森林➡️二叉树","aria-label":'Permalink to "森林➡️二叉树"'},"​")],-1)),a[5]||(a[5]=s("ul",null,[s("li",null,"将森林中的每棵树转换成相应的二叉树"),s("li",null,"第一棵二叉树不动，从第二棵二叉树开始，依次把后一棵二叉树的根结点作为前一棵二叉树根结点的右孩子，当所有二叉树连在一起后所得到的二叉树就是由森林转换得到的二叉树")],-1)),i(p,{class:"my-2",lazy:"",src:"/My-Project/images/02331/forestToBinaryTree.webp","data-fancybox":"gallery",width:"100%"}),a[6]||(a[6]=s("h4",{id:"二叉树➡️树-森林",tabindex:"-1"},[e("二叉树➡️树&森林 "),s("a",{class:"header-anchor",href:"#二叉树➡️树-森林","aria-label":'Permalink to "二叉树➡️树&森林"'},"​")],-1)),a[7]||(a[7]=s("ul",null,[s("li",null,"若某结点是其双亲的左孩子，则把该结点的右孩子、右孩子的右孩子、......都与该结点的双亲结点用线连起来"),s("li",null,"删掉原二叉树中所有双亲结点与右孩子结点的连线"),s("li",null,"整理前两步所得到的树或森林，使之结构层次分明")],-1)),i(p,{class:"my-2",lazy:"",src:"/My-Project/images/02331/binaryTreeToForest.webp","data-fancybox":"gallery",width:"100%"}),a[8]||(a[8]=n("",17)),i(k,{nodes:t.nodes,edges:t.edges},null,8,["nodes","edges"]),a[9]||(a[9]=s("p",null,"这个有向图对应的二维矩阵为：(无向图也是一样的)",-1)),a[10]||(a[10]=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mo",{fence:"true"},"["),s("mtable",{rowspacing:"0.15999999999999992em",columnspacing:"1em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"1")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"false"},[s("mn",null,"0")])])])]),s("mo",{fence:"true"},"]")]),s("annotation",{encoding:"application/x-tex"},"\\begin{bmatrix} 0 & 1 & 1 & 0 \\\\ 0 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 1 \\\\ 1 & 0 & 0 & 0 \\\\ \\end{bmatrix} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"4.80303em","vertical-align":"-2.15003em"}}),s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.6529999999999996em"}},[s("span",{style:{top:"-1.6499900000000003em"}},[s("span",{class:"pstrut",style:{height:"3.1550000000000002em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎣")])]),s("span",{style:{top:"-2.79999em"}},[s("span",{class:"pstrut",style:{height:"3.1550000000000002em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎢")])]),s("span",{style:{top:"-3.3959900000000003em"}},[s("span",{class:"pstrut",style:{height:"3.1550000000000002em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎢")])]),s("span",{style:{top:"-3.4119800000000002em"}},[s("span",{class:"pstrut",style:{height:"3.1550000000000002em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎢")])]),s("span",{style:{top:"-4.653em"}},[s("span",{class:"pstrut",style:{height:"3.1550000000000002em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎡")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.15003em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.6500000000000004em"}},[s("span",{style:{top:"-4.8100000000000005em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-2.4099999999999997em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-1.2099999999999997em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.1500000000000004em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.6500000000000004em"}},[s("span",{style:{top:"-4.8100000000000005em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-2.4099999999999997em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-1.2099999999999997em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.1500000000000004em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.6500000000000004em"}},[s("span",{style:{top:"-4.8100000000000005em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-2.4099999999999997em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-1.2099999999999997em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.1500000000000004em"}},[s("span")])])])]),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"arraycolsep",style:{width:"0.5em"}}),s("span",{class:"col-align-c"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.6500000000000004em"}},[s("span",{style:{top:"-4.8100000000000005em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-3.61em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])]),s("span",{style:{top:"-2.4099999999999997em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])]),s("span",{style:{top:"-1.2099999999999997em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.1500000000000004em"}},[s("span")])])])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.6529999999999996em"}},[s("span",{style:{top:"-1.6499900000000003em"}},[s("span",{class:"pstrut",style:{height:"3.1550000000000002em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎦")])]),s("span",{style:{top:"-2.79999em"}},[s("span",{class:"pstrut",style:{height:"3.1550000000000002em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎥")])]),s("span",{style:{top:"-3.3959900000000003em"}},[s("span",{class:"pstrut",style:{height:"3.1550000000000002em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎥")])]),s("span",{style:{top:"-3.4119800000000002em"}},[s("span",{class:"pstrut",style:{height:"3.1550000000000002em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎥")])]),s("span",{style:{top:"-4.653em"}},[s("span",{class:"pstrut",style:{height:"3.1550000000000002em"}}),s("span",{class:"delimsizinginner delim-size4"},[s("span",null,"⎤")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.15003em"}},[s("span")])])])])])])])])])])],-1)),a[11]||(a[11]=n("",20)),i(k,{nodes:t.DijkstraNodes,edges:t.DijkstraEdges},null,8,["nodes","edges"]),a[12]||(a[12]=n("",1)),i(r),a[13]||(a[13]=n("",4)),i(h,{title:"拓扑排序",code:`graph LR
C2-->C3;
C2-->C5-->C6;
C4-->C6;
C1-->C3-->C4-->C7;
C1-->C8-->C9-->C7;
`}),a[14]||(a[14]=s("p",null,"那么它的拓扑排序为：C1，C2，C3，C4，C8，C9，C7，C5，C6",-1)),a[15]||(a[15]=s("p",null,"求拓扑排序的基本思想：",-1)),a[16]||(a[16]=s("ul",null,[s("li",null,"从有向图中选一个无前驱的顶点输出"),s("li",null,"将此顶点和以它为起点的弧删除"),s("li",null,[e("重复前两步，直到不存在无前驱的顶点 "),s("ul",null,[s("li",null,"若此时输出的顶点数小于有向图中的顶点数，则说明有向图中存在回路"),s("li",null,"否则输出的顶点的顺序即为一个拓扑序列")])])],-1)),i(r),a[17]||(a[17]=n("",52)),i(m),i(d,{color:"text-red-500",weight:500}),a[18]||(a[18]=n("",2)),i(c,{path:"/My-Project/lottie/DataAnalysis.json"})])}}});export{F as __pageData,A as default};
