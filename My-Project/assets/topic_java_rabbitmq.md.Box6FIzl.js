import{_ as a,c as t,o as e,aS as i}from"./chunks/framework.Dn4syfiR.js";const h=JSON.parse('{"title":"rabbitMQ","description":"","frontmatter":{},"headers":[],"relativePath":"topic/java/rabbitmq.md","filePath":"topic/java/rabbitmq.md","lastUpdated":1711427596000}'),r={name:"topic/java/rabbitmq.md"},o=i('<h1 id="rabbitmq" tabindex="-1">rabbitMQ <a class="header-anchor" href="#rabbitmq" aria-label="Permalink to &quot;rabbitMQ&quot;">​</a></h1><h2 id="如何保证消息的顺序性" tabindex="-1">如何保证消息的顺序性 <a class="header-anchor" href="#如何保证消息的顺序性" aria-label="Permalink to &quot;如何保证消息的顺序性&quot;">​</a></h2><p>导致消息顺序错乱的情况</p><ul><li>一个队列对应多个消费者，消费者消费消息的速度有差异导致</li><li>一个队列对应一个消费者，消费者开了多线程也会导致</li></ul><p>解决方案</p><ul><li>一个队列对应一个消费者，</li><li>一个队列对应一个消费者，在消费者当中用内存队列排队，分发给底层不同的worker处理</li></ul>',6),l=[o];function _(c,s,n,b,d,p){return e(),t("div",null,l)}const u=a(r,[["render",_]]);export{h as __pageData,u as default};
