import{_ as a,c as i,o as n,aP as e}from"./chunks/framework.DkXG5xPu.js";const E=JSON.parse('{"title":"sky 天空盒子","description":"","frontmatter":{},"headers":[],"relativePath":"cesium/sky.md","filePath":"cesium/sky.md","lastUpdated":1708259243000}'),l={name:"cesium/sky.md"};function p(t,s,r,h,k,c){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="sky-天空盒子" tabindex="-1">sky 天空盒子 <a class="header-anchor" href="#sky-天空盒子" aria-label="Permalink to &quot;sky 天空盒子&quot;">​</a></h1><p>在cesium当中可以通过<code>viewer.value.scene.skyBox</code> 获取默认的天空盒子的背景图。</p><h2 id="重新设置天空" tabindex="-1">重新设置天空 <a class="header-anchor" href="#重新设置天空" aria-label="Permalink to &quot;重新设置天空&quot;">​</a></h2><p>这里重新指定的背景图片</p><ul><li>每个面都必须具有相同的宽度和高度</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  viewer.value.scene.skyBox </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Cesium.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SkyBox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sources: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        positiveX: wallImage,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        negativeX: wallImage,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        positiveY: wallImage,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        negativeY: wallImage,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        positiveZ: wallImage,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        negativeZ: wallImage,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,6)]))}const o=a(l,[["render",p]]);export{E as __pageData,o as default};
