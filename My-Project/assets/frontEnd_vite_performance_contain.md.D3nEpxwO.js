import{_ as i,c as l,o as a,aS as e}from"./chunks/framework.Dn4syfiR.js";const p=JSON.parse('{"title":"vite项目性能优化","description":"","frontmatter":{},"headers":[],"relativePath":"frontEnd/vite/performance/contain.md","filePath":"frontEnd/vite/performance/contain.md","lastUpdated":1749030379000}'),t={name:"frontEnd/vite/performance/contain.md"},r=e('<h1 id="vite项目性能优化" tabindex="-1">vite项目性能优化 <a class="header-anchor" href="#vite项目性能优化" aria-label="Permalink to &quot;vite项目性能优化&quot;">​</a></h1><h2 id="_1、vite的构建速度" tabindex="-1">1、vite的构建速度 <a class="header-anchor" href="#_1、vite的构建速度" aria-label="Permalink to &quot;1、vite的构建速度&quot;">​</a></h2><p>从npm run dev 命令开始到页面展示的速度</p><h2 id="_2、页面性能指标" tabindex="-1">2、页面性能指标 <a class="header-anchor" href="#_2、页面性能指标" aria-label="Permalink to &quot;2、页面性能指标&quot;">​</a></h2><ul><li>首屏时间</li><li>白屏时间</li><li>首次输入延迟</li><li>首次交互时间</li><li>页面加载时间</li><li>页面渲染时间</li><li>页面回流次数</li><li>页面重绘次数</li><li>页面元素数量</li><li>页面元素大小</li><li>页面元素数量</li><li>页面元素大小</li><li>......</li></ul><h2 id="_3、js逻辑优化" tabindex="-1">3、js逻辑优化 <a class="header-anchor" href="#_3、js逻辑优化" aria-label="Permalink to &quot;3、js逻辑优化&quot;">​</a></h2><ul><li>减少代码的副作用</li><li>减少循环次数</li><li>减少事件绑定</li><li>减少dom操作</li><li>减少css操作</li><li>减少计算</li><li>减少异步请求</li><li>减少promise</li><li>减少递归</li><li>减少闭包</li><li>减少内存占用</li><li>减少内存分配</li><li>减少内存回收</li><li>减少内存泄漏</li><li>减少内存泄漏</li><li>......</li></ul><h2 id="_4、css优化" tabindex="-1">4、css优化 <a class="header-anchor" href="#_4、css优化" aria-label="Permalink to &quot;4、css优化&quot;">​</a></h2><ul><li>关注继承属性：能继承的旧不要重复写</li><li>尽量避免太过于深的css嵌套</li><li>......</li></ul><h2 id="_5、构建优化" tabindex="-1">5、构建优化 <a class="header-anchor" href="#_5、构建优化" aria-label="Permalink to &quot;5、构建优化&quot;">​</a></h2><p>减小构建文件的大小</p><ul><li>压缩</li><li>treeshaking</li><li>图片资源压缩</li><li>cdn加载</li><li>分包</li><li>......</li></ul>',12),o=[r];function n(s,c,d,h,_,u){return a(),l("div",null,o)}const f=i(t,[["render",n]]);export{p as __pageData,f as default};
